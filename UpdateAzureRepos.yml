trigger:
  branches:
    include:
      - '*'
pr:
  branches:
    include:
      - '*'

pool:
  vmImage: windows-latest

jobs:
 - job: ImportChanges
   displayName: 'Importando mudanças do Github'
   steps:
    - checkout: self

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          Write-Host '============================================================='
          Write-Host 'Sincronizando repositório GitHub com repositório Azure DevOps'
          Write-Host '============================================================='

          # Define o diretório de trabalho base a partir da pipeline de build
          $sourceDirectoryPath = '$(Build.SourcesDirectory)' | Split-Path

          # Combina o diretório de origem com 'gitHub' para formar o caminho do repositório que será clonado.
          $githubDirectoryPath = Join-Path -Path $sourceDirectoryPath -ChildPath "gitHub"
          $githubRepositoryPath = Join-Path -Path $githubDirectoryPath -ChildPath "$(Build.Repository.Name).git"

          Write-Host "$githubRepositoryPath"

          # O nome abaixo deve mudar de acordo com o dono do repositório.
          $alias = 'Gabrieups' + "$(Github.PAT)"
          
          # Define a URL para clonar o repositório GitHub
          $githubRepositoryUrl = "https://$alias@github.com/$(Build.Repository.Name)"

          $organizationName = ($env:SYSTEM_COLLECTIONURI -split '/')[3]
          $projectName = $env:SYSTEM_TEAMPROJECT
          $BuildRepositoryName = $(Build.Repository.Name)
          
          # Define a URL para o repositório Azure DevOps
          $azureRepositoryUrl = "https://$(AzureDevOps.PAT)@dev.azure.com/$organizationName/$projectName/_git/$($BuildRepositoryName -split '/')[1]"

          Write-Host "$projectName"
          Write-Host "$organizationName"
          Write-Host "$azureRepositoryUrl"
          
          # Remove o diretório de trabalho se já existir, para garantir uma operação limpa
          if (Test-Path -Path $githubDirectoryPath) {
              Write-Host "Removendo diretório existente: $githubDirectoryPath"
              Remove-Item -Path $githubDirectoryPath -Recurse -Force
          }

          # Cria o diretório do GitHub e clona o repositório GitHub como espelho
          Write-Host "Criando diretório: $githubDirectoryPath e clonando repositório GitHub"
          New-Item -ItemType Directory -Path $githubDirectoryPath -Force | Out-Null
          Set-Location -Path $githubDirectoryPath
          git clone --mirror $githubRepositoryUrl

          # Define o local de trabalho para o diretório do repositório clonado
          Set-Location -Path $sourceDirectoryPath 

          # Remove o remoto secundário "secondary" se ele já existir
          Write-Host "Removendo remoto 'secondary' (se existente)"
          git remote rm secondary

          # Adiciona o repositório Azure DevOps como remoto secundário
          Write-Host "Adicionando remoto 'secondary' apontando para Azure DevOps"
          git remote add --mirror=fetch secondary $azureRepositoryUrl

          # Sincroniza alterações do repositório GitHub
          Write-Host "Sincronizando alterações do repositório GitHub"
          git fetch origin

          # (Opcional) Sincroniza o repositório Azure DevOps localmente antes de enviar
          Write-Host "Sincronizando com o repositório Azure DevOps"
          git pull secondary main

          # Realiza o push de todas as alterações para o repositório Azure DevOps
          Write-Host "Enviando todas as alterações para o repositório Azure DevOps"
          git push secondary --all --force

          # Exibe uma mensagem de conclusão da sincronização
          Write-Host "============================================================="
          Write-Host "Sincronização concluída com sucesso!"
          Write-Host "============================================================="

          # Retorna ao diretório inicial e remove o diretório temporário
          Set-Location -Path $sourceDirectoryPath
          if (Test-Path -Path $githubDirectoryPath) {
              Write-Host "Limpando o diretório temporário: $githubDirectoryPath"
              Remove-Item -Path $githubDirectoryPath -Recurse -Force
          }
